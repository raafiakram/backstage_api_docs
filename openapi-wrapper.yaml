apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: tirzok-api
  description: An example API
  annotations:
    backstage.io/techdocs-ref: dir:.
spec:
  type: openapi
  lifecycle: production
  owner: team-Golam
  definition: |
    openapi: 3.0.0
    info:
      title: Nginx APIs
      version: 1.0.0
    servers:
      - url: http://api.tplerp.com/v1
        description: Production server
      - url: http://staging-api.tplerp.com/v1
        description: Staging server
      - url: http://dev-api.tplerp.com/v1
        description: Local development server
    paths:
      /payment:
        get:
          summary: Payment endpoint
          description: |
            This endpoint is used to retrieve payment details based on the provided parameters.
          parameters:
            - name: paymentId
              in: query
              required: true
              schema:
                type: string
              description: The ID of the payment to retrieve.
            - name: status
              in: query
              required: false
              schema:
                type: string
                enum: [pending, completed, failed]
              description: Filter payments by their status.
            - name: date
              in: query
              required: false
              schema:
                type: string
                format: date
              description: Filter payments by date (YYYY-MM-DD).
          responses:
            '200':
              description: Successful response
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      paymentId:
                        type: string
                      amount:
                        type: number
                        format: float
                      status:
                        type: string
                      date:
                        type: string
                        format: date
                      details:
                        type: string
                    example:
                      paymentId: "abc123"
                      amount: 100.50
                      status: "completed"
                      date: "2024-08-01"
                      details: "Payment completed successfully."
            '400':
              description: Invalid parameters
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        type: string
                      message:
                        type: string
                    example:
                      error: "Bad Request"
                      message: "The paymentId parameter is required."
            '404':
              description: Payment not found
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        type: string
                      message:
                        type: string
                    example:
                      error: "Not Found"
                      message: "Payment with ID abc123 was not found."
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        type: string
                      message:
                        type: string
                    example:
                      error: "Internal Server Error"
                      message: "An unexpected error occurred."

